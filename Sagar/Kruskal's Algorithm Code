<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kruskal's Algorithm Code</title>
    <style>
        /* General Styling */
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 20px;
            background: linear-gradient(to right, #89f7fe, #66a6ff);
            color: #333;
        }

        h1 {
            text-align: center;
            color: #003366;
            animation: fadeIn 2s;
            margin-bottom: 30px;
        }

        pre {
            background-color: #f4f4f4;
            border: 1px solid #ddd;
            padding: 15px;
            border-radius: 8px;
            overflow-x: auto;
            font-size: 16px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        button {
            display: block;
            margin: 30px auto;
            background-color: #003366;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

        button:hover {
            background-color: #001f4d;
            transform: scale(1.1);
        }

        /* Media Queries */
        @media (max-width: 768px) {
            body {
                margin: 10px;
            }

            pre {
                font-size: 14px;
                padding: 10px;
            }

            button {
                padding: 8px 16px;
                font-size: 14px;
            }
        }

        @media (max-width: 480px) {
            body {
                font-size: 14px;
                margin: 5px;
            }

            h1 {
                font-size: 20px;
            }

            pre {
                font-size: 12px;
                padding: 8px;
            }

            button {
                padding: 6px 12px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>

<h1>Kruskal's Algorithm Code</h1>

<pre>
#include &lt;bits/stdc++.h&gt;
using namespace std;

class DisjointSet {
private:
    vector<int> parent, rank;
    
public:
    DisjointSet(int n) {
        parent.resize(n);
        rank.resize(n, 0);
        for (int i = 0; i &lt; n; i++) {
            parent[i] = i;
        }
    }

    int find(int x) {
        if (parent[x] != x) {
            parent[x] = find(parent[x]);
        }
        return parent[x];
    }

    void unionSet(int x, int y) {
        int rootX = find(x);
        int rootY = find(y);
        
        if (rootX != rootY) {
            if (rank[rootX] &gt; rank[rootY]) {
                parent[rootY] = rootX;
            } else if (rank[rootX] &lt; rank[rootY]) {
                parent[rootX] = rootY;
            } else {
                parent[rootY] = rootX;
                rank[rootX]++;
            }
        }
    }
};

struct Edge {
    int u, v, weight;
    
    bool operator&lt;(const Edge& other) const {
        return weight &lt; other.weight;
    }
};

class Kruskal {
private:
    vector<Edge> edges;
    int vertices;

public:
    Kruskal(int v) {
        vertices = v;
    }

    void addEdge(int u, int v, int weight) {
        edges.push_back({u, v, weight});
    }

    int kruskalMST() {
        sort(edges.begin(), edges.end());
        
        DisjointSet ds(vertices);
        int mstWeight = 0;
        
        for (const Edge& edge : edges) {
            int u = edge.u;
            int v = edge.v;
            int weight = edge.weight;
            
            if (ds.find(u) != ds.find(v)) {
                ds.unionSet(u, v);
                mstWeight += weight;
            }
        }
        return mstWeight;
    }
};

int main() {
    Kruskal kruskal(4);
    
    kruskal.addEdge(0, 1, 10);
    kruskal.addEdge(0, 2, 6);
    kruskal.addEdge(0, 3, 5);
    kruskal.addEdge(1, 3, 15);
    kruskal.addEdge(2, 3, 4);
    
    cout &lt;&lt; "Weight of MST: " &lt;&lt; kruskal.kruskalMST() &lt;&lt; endl;
    
    return 0;
}
</pre>

</body>
</html>
